{"version":3,"sources":["../src/react-responsive-app.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;AAGA;;;;;;IAKqB,qB;;;AACjB,mCAAY,KAAZ,EAAmB;AAAA;;AAAA,6GACT,KADS;;AAGf,cAAK,KAAL,GAAa;AACT,yBAAa,OAAO,UADX;AAET,2BAAe;AAFN,SAAb;;AAKA,cAAK,aAAL,GAAqB,MAAK,aAAL,CAAmB,IAAnB,OAArB;AARe;AASlB;;;;qCAEY,C,EAAG;AACZ,iBAAK,QAAL,CAAc,EAAC,aAAa,OAAO,UAArB,EAAd;AACH;;;4CAEmB;AAChB,mBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,YAAvC;AACH;;;+CAEsB;AACnB,mBAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,YAA1C;AACH;;;wCAEe;AACZ,gBAAG,KAAK,IAAL,CAAU,QAAV,CAAmB,SAAnB,IAAgC,MAAnC,EAA2C;AACvC,qBAAK,IAAL,CAAU,QAAV,CAAmB,SAAnB,CAA6B,MAA7B,CAAoC,MAApC;AACA;AACA;AACH,aAJD,MAIO;AACH,qBAAK,IAAL,CAAU,QAAV,CAAmB,SAAnB,CAA6B,GAA7B,CAAiC,MAAjC;AACA;AACA;AACH;AACJ;;;iCAEQ;AACL,gBAAI,iBAAiB,KAAK,KAAL,CAAW,SAAhC;;AAEA,gBAAG,KAAK,KAAL,CAAW,WAAX,GAAyB,KAAK,KAAL,CAAW,WAAvC,EAAoD;AAChD,kCAAkB,SAAlB;AACH,aAFD,MAEO,IAAG,KAAK,KAAL,CAAW,WAAX,GAAyB,KAAK,KAAL,CAAW,WAAvC,EAAoD;AACvD,kCAAkB,SAAlB;AACH,aAFM,MAEA,IAAG,KAAK,KAAL,CAAW,WAAX,GAAyB,KAAK,KAAL,CAAW,cAAvC,EAAuD;AAC1D,kCAAkB,SAAlB;AACH,aAFM,MAEA,IAAG,KAAK,KAAL,CAAW,WAAX,IAA0B,KAAK,KAAL,CAAW,cAAxC,EAAwD;AAC3D,kCAAkB,UAAlB;AACH;;AAED;;;;;;;;;;;;;;;AAeA,mBAAO;AAAA;AAAA,kBAAK,KAAI,UAAT,EAAoB,IAAG,WAAvB,EAAmC,WAAW,cAA9C;AACH;AAAA;AAAA,sBAAK,IAAG,cAAR,EAAuB,KAAI,aAA3B;AACK,yBAAK,KAAL,CAAW;AADhB,iBADG;AAIH,uDAAK,SAAS,KAAK,aAAnB,EAAkC,IAAG,wBAArC,EAA8D,KAAI,SAAlE,GAJG;AAKH;AAAA;AAAA,sBAAK,IAAG,UAAR,EAAmB,KAAI,SAAvB;AACK,yBAAK,KAAL,CAAW;AADhB;AALG,aAAP;AASH;;;;EAzE8C,gBAAM,S;;kBAApC,qB;;;AA4ErB,sBAAsB,SAAtB,GAAkC;AAC9B,iBAAa,gBAAM,SAAN,CAAgB,MADC;AAE9B,iBAAa,gBAAM,SAAN,CAAgB,MAFC;AAG9B,oBAAgB,gBAAM,SAAN,CAAgB,MAHF;AAI9B,qBAAiB,gBAAM,SAAN,CAAgB,MAJH;AAK9B,oBAAgB,gBAAM,SAAN,CAAgB;AALF,CAAlC;;AAQA,sBAAsB,YAAtB,GAAqC;AACjC,iBAAa,GADoB;AAEjC,iBAAa,GAFoB;AAGjC,oBAAgB,IAHiB;AAIjC,qBAAiB;AAJgB,CAArC","file":"react-responsive-app.js","sourcesContent":["import React from 'react';\nimport './react-responsive-app.scss';\n\n\n/**\n * This class has no concerns about how it displays the sidemenu or the main content while \n * the screen size is normal size (width > 780)\n * it applies also classnames for different types of screens (mobile (<480), tablet(<780), screen, flat (tv)(>2000))\n*/\nexport default class ResponsiveApplication extends React.Component{\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            windowWidth: window.innerWidth,\n            currentDevice: 'mobile'\n        };\n        \n        this.toggleSideBar = this.toggleSideBar.bind(this);\n    }\n\n    handleResize(e) {\n        this.setState({windowWidth: window.innerWidth});\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }    \n    \n    toggleSideBar() {\n        if(this.refs.reactApp.className == 'open') {\n            this.refs.reactApp.classList.remove('open');\n            //this.refs.sideBar.classList.remove('open');\n            //this.refs.overlay.classList.remove('open');\n        } else {\n            this.refs.reactApp.classList.add('open');\n            //this.refs.sideBar.classList.add('open');\n            //this.refs.overlay.classList.add('open');\n        }\n    }\n    \n    render() {\n        let containerStyle = this.props.className;\n        \n        if(this.state.windowWidth < this.props.mobileWidth) {\n            containerStyle += \" mobile\";\n        } else if(this.state.windowWidth < this.props.tabletWidth) {\n            containerStyle += \" tablet\";\n        } else if(this.state.windowWidth < this.props.screenMaxWidth) {\n            containerStyle += \" screen\";\n        } else if(this.state.windowWidth >= this.props.screenMaxWidth) {\n            containerStyle += \" flat-tv\";\n        }\n        \n        /*\n        let contentStyle = {\n            position: 'absolute',\n        }\n        \n        let barStyle = {\n            position: 'absolute',\n            left: '0px',\n            top: '0px',\n            bottom: '0px',\n            height: '100%',\n            width: '250px'\n        }\n        */\n        \n        return <div ref=\"reactApp\" id=\"react-app\" className={containerStyle}>\n            <div id=\"main-content\" ref=\"mainContent\">\n                {this.props.children}\n            </div>       \n            <div onClick={this.toggleSideBar} id=\"responsive-app-overlay\" ref=\"overlay\"></div>\n            <div id=\"side-bar\" ref=\"sideBar\" >\n                {this.props.sidebarContent}\n            </div>\n        </div>;\n    }\n}\n\nResponsiveApplication.propTypes = {\n    mobileWidth: React.PropTypes.number,\n    tabletWidth: React.PropTypes.number,\n    screenMaxWidth: React.PropTypes.number,\n    applicationName: React.PropTypes.string,\n    sidebarContent: React.PropTypes.node\n}\n\nResponsiveApplication.defaultProps = {    \n    mobileWidth: 480,\n    tabletWidth: 780,\n    screenMaxWidth: 2000,\n    applicationName: \"Application Name\"\n}"]}